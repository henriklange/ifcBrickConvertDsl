/**
 * generated by Xtext 2.12.0
 */
package org.xtext.ifcbrickconvert.ifcBrick.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.ifcbrickconvert.ifcBrick.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class IfcBrickFactoryImpl extends EFactoryImpl implements IfcBrickFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static IfcBrickFactory init()
  {
    try
    {
      IfcBrickFactory theIfcBrickFactory = (IfcBrickFactory)EPackage.Registry.INSTANCE.getEFactory(IfcBrickPackage.eNS_URI);
      if (theIfcBrickFactory != null)
      {
        return theIfcBrickFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new IfcBrickFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IfcBrickFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case IfcBrickPackage.ROOT: return createRoot();
      case IfcBrickPackage.HEADER: return createHeader();
      case IfcBrickPackage.DATA: return createData();
      case IfcBrickPackage.ENTITY: return createEntity();
      case IfcBrickPackage.ENTITY_WITH_ID: return createEntityWithId();
      case IfcBrickPackage.ENTITY_TERMINATED: return createEntityTerminated();
      case IfcBrickPackage.ATTRIBUTE_COLLECTION: return createAttributeCollection();
      case IfcBrickPackage.ATTRIBUTE: return createAttribute();
      case IfcBrickPackage.ENT_ID: return createEntId();
      case IfcBrickPackage.CSV: return createCSV();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Root createRoot()
  {
    RootImpl root = new RootImpl();
    return root;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Header createHeader()
  {
    HeaderImpl header = new HeaderImpl();
    return header;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Data createData()
  {
    DataImpl data = new DataImpl();
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity createEntity()
  {
    EntityImpl entity = new EntityImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EntityWithId createEntityWithId()
  {
    EntityWithIdImpl entityWithId = new EntityWithIdImpl();
    return entityWithId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EntityTerminated createEntityTerminated()
  {
    EntityTerminatedImpl entityTerminated = new EntityTerminatedImpl();
    return entityTerminated;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AttributeCollection createAttributeCollection()
  {
    AttributeCollectionImpl attributeCollection = new AttributeCollectionImpl();
    return attributeCollection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute createAttribute()
  {
    AttributeImpl attribute = new AttributeImpl();
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EntId createEntId()
  {
    EntIdImpl entId = new EntIdImpl();
    return entId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CSV createCSV()
  {
    CSVImpl csv = new CSVImpl();
    return csv;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IfcBrickPackage getIfcBrickPackage()
  {
    return (IfcBrickPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static IfcBrickPackage getPackage()
  {
    return IfcBrickPackage.eINSTANCE;
  }

} //IfcBrickFactoryImpl
