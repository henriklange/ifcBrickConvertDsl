/**
 * generated by Xtext 2.12.0
 */
package org.xtext.ifcbrickconvert.ifcBrick.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.ifcbrickconvert.ifcBrick.Attribute;
import org.xtext.ifcbrickconvert.ifcBrick.AttributeCollection;
import org.xtext.ifcbrickconvert.ifcBrick.CSV;
import org.xtext.ifcbrickconvert.ifcBrick.EntId;
import org.xtext.ifcbrickconvert.ifcBrick.Entity;
import org.xtext.ifcbrickconvert.ifcBrick.IfcBrickPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Attribute</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.AttributeImpl#getX <em>X</em>}</li>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.AttributeImpl#getEid <em>Eid</em>}</li>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.AttributeImpl#getC <em>C</em>}</li>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.AttributeImpl#getE <em>E</em>}</li>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.AttributeImpl#getAc <em>Ac</em>}</li>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.AttributeImpl#getU <em>U</em>}</li>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.AttributeImpl#getS <em>S</em>}</li>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.AttributeImpl#getI <em>I</em>}</li>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.AttributeImpl#getD <em>D</em>}</li>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.AttributeImpl#getN <em>N</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AttributeImpl extends MinimalEObjectImpl.Container implements Attribute
{
  /**
   * The default value of the '{@link #getX() <em>X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX()
   * @generated
   * @ordered
   */
  protected static final String X_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getX() <em>X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX()
   * @generated
   * @ordered
   */
  protected String x = X_EDEFAULT;

  /**
   * The cached value of the '{@link #getEid() <em>Eid</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEid()
   * @generated
   * @ordered
   */
  protected EntId eid;

  /**
   * The cached value of the '{@link #getC() <em>C</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getC()
   * @generated
   * @ordered
   */
  protected CSV c;

  /**
   * The cached value of the '{@link #getE() <em>E</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getE()
   * @generated
   * @ordered
   */
  protected Entity e;

  /**
   * The cached value of the '{@link #getAc() <em>Ac</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAc()
   * @generated
   * @ordered
   */
  protected AttributeCollection ac;

  /**
   * The default value of the '{@link #getU() <em>U</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getU()
   * @generated
   * @ordered
   */
  protected static final String U_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getU() <em>U</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getU()
   * @generated
   * @ordered
   */
  protected String u = U_EDEFAULT;

  /**
   * The default value of the '{@link #getS() <em>S</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getS()
   * @generated
   * @ordered
   */
  protected static final String S_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getS() <em>S</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getS()
   * @generated
   * @ordered
   */
  protected String s = S_EDEFAULT;

  /**
   * The default value of the '{@link #getI() <em>I</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getI()
   * @generated
   * @ordered
   */
  protected static final int I_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getI() <em>I</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getI()
   * @generated
   * @ordered
   */
  protected int i = I_EDEFAULT;

  /**
   * The default value of the '{@link #getD() <em>D</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getD()
   * @generated
   * @ordered
   */
  protected static final String D_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getD() <em>D</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getD()
   * @generated
   * @ordered
   */
  protected String d = D_EDEFAULT;

  /**
   * The default value of the '{@link #getN() <em>N</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getN()
   * @generated
   * @ordered
   */
  protected static final String N_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getN() <em>N</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getN()
   * @generated
   * @ordered
   */
  protected String n = N_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AttributeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IfcBrickPackage.Literals.ATTRIBUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getX()
  {
    return x;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setX(String newX)
  {
    String oldX = x;
    x = newX;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__X, oldX, x));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EntId getEid()
  {
    return eid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEid(EntId newEid, NotificationChain msgs)
  {
    EntId oldEid = eid;
    eid = newEid;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__EID, oldEid, newEid);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEid(EntId newEid)
  {
    if (newEid != eid)
    {
      NotificationChain msgs = null;
      if (eid != null)
        msgs = ((InternalEObject)eid).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ATTRIBUTE__EID, null, msgs);
      if (newEid != null)
        msgs = ((InternalEObject)newEid).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ATTRIBUTE__EID, null, msgs);
      msgs = basicSetEid(newEid, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__EID, newEid, newEid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CSV getC()
  {
    return c;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetC(CSV newC, NotificationChain msgs)
  {
    CSV oldC = c;
    c = newC;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__C, oldC, newC);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setC(CSV newC)
  {
    if (newC != c)
    {
      NotificationChain msgs = null;
      if (c != null)
        msgs = ((InternalEObject)c).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ATTRIBUTE__C, null, msgs);
      if (newC != null)
        msgs = ((InternalEObject)newC).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ATTRIBUTE__C, null, msgs);
      msgs = basicSetC(newC, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__C, newC, newC));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity getE()
  {
    return e;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetE(Entity newE, NotificationChain msgs)
  {
    Entity oldE = e;
    e = newE;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__E, oldE, newE);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setE(Entity newE)
  {
    if (newE != e)
    {
      NotificationChain msgs = null;
      if (e != null)
        msgs = ((InternalEObject)e).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ATTRIBUTE__E, null, msgs);
      if (newE != null)
        msgs = ((InternalEObject)newE).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ATTRIBUTE__E, null, msgs);
      msgs = basicSetE(newE, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__E, newE, newE));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AttributeCollection getAc()
  {
    return ac;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAc(AttributeCollection newAc, NotificationChain msgs)
  {
    AttributeCollection oldAc = ac;
    ac = newAc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__AC, oldAc, newAc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAc(AttributeCollection newAc)
  {
    if (newAc != ac)
    {
      NotificationChain msgs = null;
      if (ac != null)
        msgs = ((InternalEObject)ac).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ATTRIBUTE__AC, null, msgs);
      if (newAc != null)
        msgs = ((InternalEObject)newAc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ATTRIBUTE__AC, null, msgs);
      msgs = basicSetAc(newAc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__AC, newAc, newAc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getU()
  {
    return u;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setU(String newU)
  {
    String oldU = u;
    u = newU;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__U, oldU, u));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getS()
  {
    return s;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setS(String newS)
  {
    String oldS = s;
    s = newS;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__S, oldS, s));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getI()
  {
    return i;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setI(int newI)
  {
    int oldI = i;
    i = newI;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__I, oldI, i));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getD()
  {
    return d;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setD(String newD)
  {
    String oldD = d;
    d = newD;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__D, oldD, d));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getN()
  {
    return n;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setN(String newN)
  {
    String oldN = n;
    n = newN;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ATTRIBUTE__N, oldN, n));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ATTRIBUTE__EID:
        return basicSetEid(null, msgs);
      case IfcBrickPackage.ATTRIBUTE__C:
        return basicSetC(null, msgs);
      case IfcBrickPackage.ATTRIBUTE__E:
        return basicSetE(null, msgs);
      case IfcBrickPackage.ATTRIBUTE__AC:
        return basicSetAc(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ATTRIBUTE__X:
        return getX();
      case IfcBrickPackage.ATTRIBUTE__EID:
        return getEid();
      case IfcBrickPackage.ATTRIBUTE__C:
        return getC();
      case IfcBrickPackage.ATTRIBUTE__E:
        return getE();
      case IfcBrickPackage.ATTRIBUTE__AC:
        return getAc();
      case IfcBrickPackage.ATTRIBUTE__U:
        return getU();
      case IfcBrickPackage.ATTRIBUTE__S:
        return getS();
      case IfcBrickPackage.ATTRIBUTE__I:
        return getI();
      case IfcBrickPackage.ATTRIBUTE__D:
        return getD();
      case IfcBrickPackage.ATTRIBUTE__N:
        return getN();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ATTRIBUTE__X:
        setX((String)newValue);
        return;
      case IfcBrickPackage.ATTRIBUTE__EID:
        setEid((EntId)newValue);
        return;
      case IfcBrickPackage.ATTRIBUTE__C:
        setC((CSV)newValue);
        return;
      case IfcBrickPackage.ATTRIBUTE__E:
        setE((Entity)newValue);
        return;
      case IfcBrickPackage.ATTRIBUTE__AC:
        setAc((AttributeCollection)newValue);
        return;
      case IfcBrickPackage.ATTRIBUTE__U:
        setU((String)newValue);
        return;
      case IfcBrickPackage.ATTRIBUTE__S:
        setS((String)newValue);
        return;
      case IfcBrickPackage.ATTRIBUTE__I:
        setI((Integer)newValue);
        return;
      case IfcBrickPackage.ATTRIBUTE__D:
        setD((String)newValue);
        return;
      case IfcBrickPackage.ATTRIBUTE__N:
        setN((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ATTRIBUTE__X:
        setX(X_EDEFAULT);
        return;
      case IfcBrickPackage.ATTRIBUTE__EID:
        setEid((EntId)null);
        return;
      case IfcBrickPackage.ATTRIBUTE__C:
        setC((CSV)null);
        return;
      case IfcBrickPackage.ATTRIBUTE__E:
        setE((Entity)null);
        return;
      case IfcBrickPackage.ATTRIBUTE__AC:
        setAc((AttributeCollection)null);
        return;
      case IfcBrickPackage.ATTRIBUTE__U:
        setU(U_EDEFAULT);
        return;
      case IfcBrickPackage.ATTRIBUTE__S:
        setS(S_EDEFAULT);
        return;
      case IfcBrickPackage.ATTRIBUTE__I:
        setI(I_EDEFAULT);
        return;
      case IfcBrickPackage.ATTRIBUTE__D:
        setD(D_EDEFAULT);
        return;
      case IfcBrickPackage.ATTRIBUTE__N:
        setN(N_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ATTRIBUTE__X:
        return X_EDEFAULT == null ? x != null : !X_EDEFAULT.equals(x);
      case IfcBrickPackage.ATTRIBUTE__EID:
        return eid != null;
      case IfcBrickPackage.ATTRIBUTE__C:
        return c != null;
      case IfcBrickPackage.ATTRIBUTE__E:
        return e != null;
      case IfcBrickPackage.ATTRIBUTE__AC:
        return ac != null;
      case IfcBrickPackage.ATTRIBUTE__U:
        return U_EDEFAULT == null ? u != null : !U_EDEFAULT.equals(u);
      case IfcBrickPackage.ATTRIBUTE__S:
        return S_EDEFAULT == null ? s != null : !S_EDEFAULT.equals(s);
      case IfcBrickPackage.ATTRIBUTE__I:
        return i != I_EDEFAULT;
      case IfcBrickPackage.ATTRIBUTE__D:
        return D_EDEFAULT == null ? d != null : !D_EDEFAULT.equals(d);
      case IfcBrickPackage.ATTRIBUTE__N:
        return N_EDEFAULT == null ? n != null : !N_EDEFAULT.equals(n);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (x: ");
    result.append(x);
    result.append(", u: ");
    result.append(u);
    result.append(", s: ");
    result.append(s);
    result.append(", i: ");
    result.append(i);
    result.append(", d: ");
    result.append(d);
    result.append(", n: ");
    result.append(n);
    result.append(')');
    return result.toString();
  }

} //AttributeImpl
