/**
 * generated by Xtext 2.12.0
 */
package org.xtext.ifcbrickconvert.ifcBrick.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.ifcbrickconvert.ifcBrick.EntId;
import org.xtext.ifcbrickconvert.ifcBrick.Entity;
import org.xtext.ifcbrickconvert.ifcBrick.EntityWithId;
import org.xtext.ifcbrickconvert.ifcBrick.IfcBrickPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entity With Id</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.EntityWithIdImpl#getEid <em>Eid</em>}</li>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.EntityWithIdImpl#getEntity <em>Entity</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EntityWithIdImpl extends MinimalEObjectImpl.Container implements EntityWithId
{
  /**
   * The cached value of the '{@link #getEid() <em>Eid</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEid()
   * @generated
   * @ordered
   */
  protected EntId eid;

  /**
   * The cached value of the '{@link #getEntity() <em>Entity</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntity()
   * @generated
   * @ordered
   */
  protected Entity entity;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntityWithIdImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IfcBrickPackage.Literals.ENTITY_WITH_ID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EntId getEid()
  {
    return eid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEid(EntId newEid, NotificationChain msgs)
  {
    EntId oldEid = eid;
    eid = newEid;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ENTITY_WITH_ID__EID, oldEid, newEid);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEid(EntId newEid)
  {
    if (newEid != eid)
    {
      NotificationChain msgs = null;
      if (eid != null)
        msgs = ((InternalEObject)eid).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ENTITY_WITH_ID__EID, null, msgs);
      if (newEid != null)
        msgs = ((InternalEObject)newEid).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ENTITY_WITH_ID__EID, null, msgs);
      msgs = basicSetEid(newEid, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ENTITY_WITH_ID__EID, newEid, newEid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity getEntity()
  {
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEntity(Entity newEntity, NotificationChain msgs)
  {
    Entity oldEntity = entity;
    entity = newEntity;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ENTITY_WITH_ID__ENTITY, oldEntity, newEntity);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEntity(Entity newEntity)
  {
    if (newEntity != entity)
    {
      NotificationChain msgs = null;
      if (entity != null)
        msgs = ((InternalEObject)entity).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ENTITY_WITH_ID__ENTITY, null, msgs);
      if (newEntity != null)
        msgs = ((InternalEObject)newEntity).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ENTITY_WITH_ID__ENTITY, null, msgs);
      msgs = basicSetEntity(newEntity, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ENTITY_WITH_ID__ENTITY, newEntity, newEntity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ENTITY_WITH_ID__EID:
        return basicSetEid(null, msgs);
      case IfcBrickPackage.ENTITY_WITH_ID__ENTITY:
        return basicSetEntity(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ENTITY_WITH_ID__EID:
        return getEid();
      case IfcBrickPackage.ENTITY_WITH_ID__ENTITY:
        return getEntity();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ENTITY_WITH_ID__EID:
        setEid((EntId)newValue);
        return;
      case IfcBrickPackage.ENTITY_WITH_ID__ENTITY:
        setEntity((Entity)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ENTITY_WITH_ID__EID:
        setEid((EntId)null);
        return;
      case IfcBrickPackage.ENTITY_WITH_ID__ENTITY:
        setEntity((Entity)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ENTITY_WITH_ID__EID:
        return eid != null;
      case IfcBrickPackage.ENTITY_WITH_ID__ENTITY:
        return entity != null;
    }
    return super.eIsSet(featureID);
  }

} //EntityWithIdImpl
