/**
 * generated by Xtext 2.12.0
 */
package org.xtext.ifcbrickconvert.ifcBrick.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.ifcbrickconvert.ifcBrick.AttributeCollection;
import org.xtext.ifcbrickconvert.ifcBrick.Entity;
import org.xtext.ifcbrickconvert.ifcBrick.IfcBrickPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entity</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.EntityImpl#getDefinition <em>Definition</em>}</li>
 *   <li>{@link org.xtext.ifcbrickconvert.ifcBrick.impl.EntityImpl#getAttributeCollection <em>Attribute Collection</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EntityImpl extends MinimalEObjectImpl.Container implements Entity
{
  /**
   * The default value of the '{@link #getDefinition() <em>Definition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinition()
   * @generated
   * @ordered
   */
  protected static final String DEFINITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDefinition() <em>Definition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinition()
   * @generated
   * @ordered
   */
  protected String definition = DEFINITION_EDEFAULT;

  /**
   * The cached value of the '{@link #getAttributeCollection() <em>Attribute Collection</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeCollection()
   * @generated
   * @ordered
   */
  protected AttributeCollection attributeCollection;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntityImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IfcBrickPackage.Literals.ENTITY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDefinition()
  {
    return definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDefinition(String newDefinition)
  {
    String oldDefinition = definition;
    definition = newDefinition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ENTITY__DEFINITION, oldDefinition, definition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AttributeCollection getAttributeCollection()
  {
    return attributeCollection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAttributeCollection(AttributeCollection newAttributeCollection, NotificationChain msgs)
  {
    AttributeCollection oldAttributeCollection = attributeCollection;
    attributeCollection = newAttributeCollection;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ENTITY__ATTRIBUTE_COLLECTION, oldAttributeCollection, newAttributeCollection);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAttributeCollection(AttributeCollection newAttributeCollection)
  {
    if (newAttributeCollection != attributeCollection)
    {
      NotificationChain msgs = null;
      if (attributeCollection != null)
        msgs = ((InternalEObject)attributeCollection).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ENTITY__ATTRIBUTE_COLLECTION, null, msgs);
      if (newAttributeCollection != null)
        msgs = ((InternalEObject)newAttributeCollection).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IfcBrickPackage.ENTITY__ATTRIBUTE_COLLECTION, null, msgs);
      msgs = basicSetAttributeCollection(newAttributeCollection, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IfcBrickPackage.ENTITY__ATTRIBUTE_COLLECTION, newAttributeCollection, newAttributeCollection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ENTITY__ATTRIBUTE_COLLECTION:
        return basicSetAttributeCollection(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ENTITY__DEFINITION:
        return getDefinition();
      case IfcBrickPackage.ENTITY__ATTRIBUTE_COLLECTION:
        return getAttributeCollection();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ENTITY__DEFINITION:
        setDefinition((String)newValue);
        return;
      case IfcBrickPackage.ENTITY__ATTRIBUTE_COLLECTION:
        setAttributeCollection((AttributeCollection)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ENTITY__DEFINITION:
        setDefinition(DEFINITION_EDEFAULT);
        return;
      case IfcBrickPackage.ENTITY__ATTRIBUTE_COLLECTION:
        setAttributeCollection((AttributeCollection)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IfcBrickPackage.ENTITY__DEFINITION:
        return DEFINITION_EDEFAULT == null ? definition != null : !DEFINITION_EDEFAULT.equals(definition);
      case IfcBrickPackage.ENTITY__ATTRIBUTE_COLLECTION:
        return attributeCollection != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (definition: ");
    result.append(definition);
    result.append(')');
    return result.toString();
  }

} //EntityImpl
